
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://clyqfnqkicwvpymbqijn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNseXFmbnFraWN3dnB5bWJxaWpuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4MDczODAsImV4cCI6MjA1OTM4MzM4MH0.CiGisrTRO87EcpytzoUUAnmpJKAkDyt-qx8oed2yQ5A";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage
  }
});

// Define temporary types for our custom tables until the types.ts is regenerated
export type MADueDiligence = {
  id: string;
  user_id: string;
  target_company: string;
  industry: string;
  financial_data: string;
  summary: string | null;
  created_at: string;
  updated_at: string;
};

export type MARisk = {
  id: string;
  diligence_id: string;
  level: 'low' | 'medium' | 'high';
  description: string;
  created_at: string;
};

export type MARecommendation = {
  id: string;
  diligence_id: string;
  description: string;
  created_at: string;
};

export type MAApplicableLaw = {
  id: string;
  diligence_id: string;
  name: string;
  description: string;
  created_at: string;
};

// Extra type safety for our tables
export type Tables = Database['public']['Tables'] & {
  ma_due_diligence: {
    Row: MADueDiligence;
    Insert: Omit<MADueDiligence, 'id' | 'created_at' | 'updated_at'>;
    Update: Partial<Omit<MADueDiligence, 'id' | 'created_at' | 'updated_at'>>;
  };
  ma_risks: {
    Row: MARisk;
    Insert: Omit<MARisk, 'id' | 'created_at'>;
    Update: Partial<Omit<MARisk, 'id' | 'created_at'>>;
  };
  ma_recommendations: {
    Row: MARecommendation;
    Insert: Omit<MARecommendation, 'id' | 'created_at'>;
    Update: Partial<Omit<MARecommendation, 'id' | 'created_at'>>;
  };
  ma_applicable_laws: {
    Row: MAApplicableLaw;
    Insert: Omit<MAApplicableLaw, 'id' | 'created_at'>;
    Update: Partial<Omit<MAApplicableLaw, 'id' | 'created_at'>>;
  };
};

// Type-safe helper functions
export const fromMA = {
  dueDiligence() {
    return supabase.from('ma_due_diligence') as unknown as ReturnType<typeof supabase.from<'ma_due_diligence', Tables['ma_due_diligence']['Row']>>;
  },
  risks() {
    return supabase.from('ma_risks') as unknown as ReturnType<typeof supabase.from<'ma_risks', Tables['ma_risks']['Row']>>;
  },
  recommendations() {
    return supabase.from('ma_recommendations') as unknown as ReturnType<typeof supabase.from<'ma_recommendations', Tables['ma_recommendations']['Row']>>;
  },
  applicableLaws() {
    return supabase.from('ma_applicable_laws') as unknown as ReturnType<typeof supabase.from<'ma_applicable_laws', Tables['ma_applicable_laws']['Row']>>;
  }
};
